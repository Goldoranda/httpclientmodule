{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,42BAA42B,WAAW,IAAI,eAAe,6HAA6H,YAAY,sMAAsM,mBAAmB,6FAA6F,0BAA0B,4KAA4K,qBAAqB,6DAA6D,oBAAoB,6DAA6D,mBAAmB,6DAA6D,sBAAsB,uMAAuM,YAAY,uJAAuJ,cAAc,kIAAkI,sBAAsB,MAAM,sBAAsB,iJ;;;;;;;;;;;;;;;;;;ACAlxE;AAEL;AAO7C;IAGE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,qDAAqD;IACrD,+BAAQ,GAAR;QAAA,iBAGC;QAFC,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aAC/B,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,MAAM,GAAG,IAAI,EAAlB,CAAkB,CAAC,CAAC;IAC3C,CAAC;IATU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAIiC,yDAAW;OAHjC,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;ACT+B;AACE;AACjB;AAEe;AACT;AACF;AAc7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,yDAAW,CAAC;YACxB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;ACpB4B;AACP;AAM3C;IAGE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,WAAM,GAAG,4CAA4C,CAAC;IAEd,CAAC;IAEzC,8BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAPU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAI0B,+DAAU;OAHzB,WAAW,CAQvB;IAAD,kBAAC;CAAA;AARuB;;;;;;;;;;;;;ACPxB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<header class=\\\"border-bottom text-center bg-light shadow-sm\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <nav class=\\\"navbar navbar-expand-lg d-block w-100 navbar-light\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Ng HttpClientModule with JsonPlaceholder</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n      </nav>\\n    </div>\\n  </div>\\n</header>\\n<section class=\\\"UserSection py-3\\\">\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users$\\\" class=\\\"col col-sm-6 mb-3\\\">\\n      <div class=\\\"p-3 border shadow-sm rounded-lg d-block\\\">\\n        <h2 class=\\\"text-primary\\\">{{user.name}} ({{user.username}})</h2>\\n        <h3><span class=\\\"font-weight-bold align-middle\\\"><img src=\\\"/httpclientmodule/assets/mail.svg\\\" /></span> {{user.email}}</h3>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"address col-sm-6\\\">\\n            <div class=\\\"address mb-2\\\">\\n              <span class=\\\"align-text-bottom d-block mb-2\\\"><b>Name:</b> {{user.company.name}}</span>\\n              <span class=\\\"align-text-bottom d-block mb-2\\\"><b>Catch Phrase:</b> {{user.company.catchPhrase}}</span>\\n            </div>\\n            <img src=\\\"/httpclientmodule/assets/map-pin.svg\\\" class=\\\"d-inline-block\\\" /> \\n             <span class=\\\"d-inline-block pl-1\\\">{{user.address.street}}</span>\\n              <span class=\\\"d-inline-block pl-3\\\">{{user.address.suite}}</span>\\n              <span class=\\\"d-inline-block pl-3\\\">{{user.address.city}}</span>\\n              <span class=\\\"d-inline-block pl-3\\\">{{user.address.zipcode}}</span>\\n          </div>\\n          <div class=\\\"address col-sm-6\\\">\\n            <span class=\\\"align-text-bottom d-block mb-3\\\">\\n              <img src=\\\"/httpclientmodule/assets/phone.svg\\\" /> {{user.phone}}\\n            </span>\\n            <span class=\\\"align-text-bottom d-block mb-3\\\">\\n              <img src=\\\"/httpclientmodule/assets/globe.svg\\\" /> {{user.website}}\\n            </span>\\n            <span class=\\\"d-block\\\">\\n              <img src=\\\"/httpclientmodule/assets/map-pin.svg\\\" /> {{user.address.geo.lat}},   {{user.address.geo.lng}}\\n            </span>\\n        </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n</section>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { User } from './user.model';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  users$: User[];\n\n  constructor(private dataService: DataService) {}\n\n  // tslint:disable-next-line: use-life-cycle-interface\n  ngOnInit() {\n    return this.dataService.getUsers()\n      .subscribe(data => this.users$ = data);\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DataService } from './data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  apiUrl = 'https://jsonplaceholder.typicode.com/users';\n\n  constructor(private http: HttpClient) { }\n\n  getUsers() {\n    return this.http.get<User[]>(this.apiUrl);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}